/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthAppsRouteImport } from './routes/_auth/apps.route'
import { Route as AuthAppsIndexImport } from './routes/_auth/apps.index'
import { Route as AuthAppsAppIdImport } from './routes/_auth/apps.$appId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthAppsRouteRoute = AuthAppsRouteImport.update({
  id: '/_auth/apps',
  path: '/apps',
  getParentRoute: () => rootRoute,
} as any)

const AuthAppsIndexRoute = AuthAppsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthAppsRouteRoute,
} as any)

const AuthAppsAppIdRoute = AuthAppsAppIdImport.update({
  id: '/$appId',
  path: '/$appId',
  getParentRoute: () => AuthAppsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/apps': {
      id: '/_auth/apps'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthAppsRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/apps/$appId': {
      id: '/_auth/apps/$appId'
      path: '/$appId'
      fullPath: '/apps/$appId'
      preLoaderRoute: typeof AuthAppsAppIdImport
      parentRoute: typeof AuthAppsRouteImport
    }
    '/_auth/apps/': {
      id: '/_auth/apps/'
      path: '/'
      fullPath: '/apps/'
      preLoaderRoute: typeof AuthAppsIndexImport
      parentRoute: typeof AuthAppsRouteImport
    }
  }
}

// Create and export the route tree

interface AuthAppsRouteRouteChildren {
  AuthAppsAppIdRoute: typeof AuthAppsAppIdRoute
  AuthAppsIndexRoute: typeof AuthAppsIndexRoute
}

const AuthAppsRouteRouteChildren: AuthAppsRouteRouteChildren = {
  AuthAppsAppIdRoute: AuthAppsAppIdRoute,
  AuthAppsIndexRoute: AuthAppsIndexRoute,
}

const AuthAppsRouteRouteWithChildren = AuthAppsRouteRoute._addFileChildren(
  AuthAppsRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/apps': typeof AuthAppsRouteRouteWithChildren
  '/apps/$appId': typeof AuthAppsAppIdRoute
  '/apps/': typeof AuthAppsIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/apps/$appId': typeof AuthAppsAppIdRoute
  '/apps': typeof AuthAppsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/login': typeof LoginRoute
  '/_auth/apps': typeof AuthAppsRouteRouteWithChildren
  '/_auth/apps/$appId': typeof AuthAppsAppIdRoute
  '/_auth/apps/': typeof AuthAppsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/apps' | '/apps/$appId' | '/apps/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/apps/$appId' | '/apps'
  id:
    | '__root__'
    | '/login'
    | '/_auth/apps'
    | '/_auth/apps/$appId'
    | '/_auth/apps/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LoginRoute: typeof LoginRoute
  AuthAppsRouteRoute: typeof AuthAppsRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LoginRoute: LoginRoute,
  AuthAppsRouteRoute: AuthAppsRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/login",
        "/_auth/apps"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/apps": {
      "filePath": "_auth/apps.route.tsx",
      "children": [
        "/_auth/apps/$appId",
        "/_auth/apps/"
      ]
    },
    "/_auth/apps/$appId": {
      "filePath": "_auth/apps.$appId.tsx",
      "parent": "/_auth/apps"
    },
    "/_auth/apps/": {
      "filePath": "_auth/apps.index.tsx",
      "parent": "/_auth/apps"
    }
  }
}
ROUTE_MANIFEST_END */
